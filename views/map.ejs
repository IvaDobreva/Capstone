<!DOCTYPE html>
<html>
<!-- START SIGMA IMPORTS -->
<script src="sigma.js/src/sigma.core.js"></script>
<script src="sigma.js/src/conrad.js"></script>
<script src="sigma.js/src/utils/sigma.utils.js"></script>
<script src="sigma.js/src/utils/sigma.polyfills.js"></script>
<script src="sigma.js/src/sigma.settings.js"></script>
<script src="sigma.js/src/classes/sigma.classes.dispatcher.js"></script>
<script src="sigma.js/src/classes/sigma.classes.configurable.js"></script>
<script src="sigma.js/src/classes/sigma.classes.graph.js"></script>
<script src="sigma.js/src/classes/sigma.classes.camera.js"></script>
<script src="sigma.js/src/classes/sigma.classes.quad.js"></script>
<script src="sigma.js/src/classes/sigma.classes.edgequad.js"></script>
<script src="sigma.js/src/captors/sigma.captors.mouse.js"></script>
<script src="sigma.js/src/captors/sigma.captors.touch.js"></script>
<script src="sigma.js/src/renderers/sigma.renderers.canvas.js"></script>
<script src="sigma.js/src/renderers/sigma.renderers.webgl.js"></script>
<script src="sigma.js/src/renderers/sigma.renderers.svg.js"></script>
<script src="sigma.js/src/renderers/sigma.renderers.def.js"></script>
<script src="sigma.js/src/renderers/webgl/sigma.webgl.nodes.def.js"></script>
<script src="sigma.js/src/renderers/webgl/sigma.webgl.nodes.fast.js"></script>
<script src="sigma.js/src/renderers/webgl/sigma.webgl.edges.def.js"></script>
<script src="sigma.js/src/renderers/webgl/sigma.webgl.edges.fast.js"></script>
<script src="sigma.js/src/renderers/webgl/sigma.webgl.edges.arrow.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.labels.def.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.hovers.def.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.nodes.def.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edges.def.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edges.curve.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edges.arrow.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edges.curvedArrow.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edgehovers.def.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edgehovers.curve.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edgehovers.arrow.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.edgehovers.curvedArrow.js"></script>
<script src="sigma.js/src/renderers/canvas/sigma.canvas.extremities.def.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.utils.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.nodes.def.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.edges.def.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.edges.curve.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.labels.def.js"></script>
<script src="sigma.js/src/renderers/svg/sigma.svg.hovers.def.js"></script>
<script src="sigma.js/src/middlewares/sigma.middlewares.rescale.js"></script>
<script src="sigma.js/src/middlewares/sigma.middlewares.copy.js"></script>
<script src="sigma.js/src/misc/sigma.misc.animation.js"></script>
<script src="sigma.js/src/misc/sigma.misc.bindEvents.js"></script>
<script src="sigma.js/src/misc/sigma.misc.bindDOMEvents.js"></script>
<script src="sigma.js/src/misc/sigma.misc.drawHovers.js"></script>
<!-- END SIGMA IMPORTS -->
<script src="sigma.js/plugins/sigma.renderers.customShapes/shape-library.js"></script>
<script src="sigma.js/plugins/sigma.renderers.customShapes/sigma.renderers.customShapes.js"></script>
<script src="sigma.js/plugins/sigma.plugins.dragNodes/sigma.plugins.dragNodes.js"></script>

  <head>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"  crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>


    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/main.css'>
    <link rel='stylesheet' href='/stylesheets/map.css'>

    <style type="text/css">
    <style>
      html {height:100%;}
      body {height: 100%;}
      #sigma-container {border: black; width:900px; height:500px; background-color: white; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); }
      .sigma-scene, .sigma-labels, .sigma-mouse {
        left: 200px;
      }
    </style>
  </head>

  <body>
    <header>
      <% include templates/header.ejs %>
    </header>

    <div class="dropdown">
      <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Select a category
      </button>
      <button type="button" class="btn btn-primary" id="new-word">Add a new word</button>
      <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <% for(var i=0; i<categories.length; i++) { %>
          <div class="dropdown-item" id= <%= categories[i]['id'] %>> <%= categories[i]['cat_name'] %> </div>
        <% } %>
      </div>
    </div>

    <div class="map" style="display:inline-block; text-align:center;">
      <div id='sigma-container'></div>
    </div>

    <script>
      function graph(images, targetId) {
        sigma.utils.pkg('sigma.canvas.nodes');
        // generate a  graph
        var i,
            s,
            img,
            g = {
              nodes: [],
              edges: []
            },
            colors = [
              '#617db4',
              '#668f3c',
              '#c6583e',
              '#b956af'
            ];
        //Generate nodes and edges
        for (i = 0; i <images.length; i++) {
          var coordX = Math.random();
          var coordY = Math.random();
          if(images[i]['cat'] == 'true') {
            coordX = 0;
            coordY = 0;
          }
          var node = {
            id: images[i]['id'],
            label: images[i]['label'],
            // note the ShapeLibrary.enumerate() returns the names of all
            // supported renderers
            type: 'square',
            x: coordX,
            y: coordY,
            size: 1,
            color: colors[Math.floor(Math.random() * colors.length)]
          };
          node.image = {
            url:'images/'+images[i]['eng'],
            clip:  node.innerRatio *0.95,
            scale: node.innerRatio *1.2
          };
          var edge = {
            id: 'e'+images[i]['id'],
            source: images[i]['id'],
            target: targetId,
            size: 1
          };
          g.nodes.push(node);
          g.edges.push(edge);
        }
        s = new sigma({
          graph: g,
          renderer: {
            // IMPORTANT:
            // This works only with the canvas renderer, so the
            // renderer type set as "canvas" is necessary here.
            container: document.getElementById('sigma-container'),
            type: 'canvas'
          },
          settings: {
            minNodeSize: 10,
            maxNodeSize: 50,
            maxEdgeSize: 5
          }
        });
        CustomShapes.init(s);
        // Initialize the dragNodes plugin:
        var dragListener = sigma.plugins.dragNodes(s, s.renderers[0]);
        dragListener.bind('startdrag', function(event) {
          console.log(event);
        });
        dragListener.bind('drag', function(event) {
          console.log(event);
        });
        dragListener.bind('drop', function(event) {
          console.log(event);
        });
        dragListener.bind('dragend', function(event) {
          console.log(event);
        });
        s.refresh();
      }
      $('#new-word').click(function() {
        window.location.href = "word/new";
      });
      $('.dropdown-item').click(function() {
        var category = $(this)[0].id;
        $.post('map/category', {'cat': category}, function(data) {
          console.log(data);
          graph(data['nodes'], data['targetId']);
        });
        console.log($(this)[0].id);
      });
    </script>

  </body>

</html>
